- model_class = ContaCorrente
.row-fluid
  .span12
    %h2.botton-border=t '.title'
    = flash_message

- if params[:data].present?
  .row-fluid
    .box.span12
      .header.hidden_print
        %img{:height => "16", :src => img_header, :width => "16"}
        %p=t '.header_list', :default => model_class.model_name.human.pluralize.titleize
      .content
        %table.table.table-striped.table-bordered
          %thead
            %tr
              %th= model_class.human_attribute_name(:id)         
              %th= model_class.human_attribute_name(:cliente_id)
              %th= model_class.human_attribute_name(:forma_de_pagamento_id)
              %th= model_class.human_attribute_name(:valor)
              %th= model_class.human_attribute_name(:observacao)
              %th= model_class.human_attribute_name(:ordem_servico)
          %tbody
            - @contas.each do |cc|
              %tr
                %td=  cc.id.to_s.rjust(4,'0')
                %td=  cc.classe.try(:nome)
                %td=  cc.forma_de_pagamento.try(:descricao)
                %td=  cc.valor.try(:real).try(:real_formatado)
                %td=  cc.observacao
                %td=  cc.ordem_servico.try(:numero)
          %tfoot
            %tr
              %th{colspan: 3}  TOTAL
              %th{colspan: 99}= @contas.collect{|c| c.valor.to_f }.sum.to_f.real.real_formatado

- else
  .row-fluid
    .box.span4
      .header
        %img{:height => "16", src: img_header, :width => "16"}
        %p=t '.header_search'
      .content-form
        = form_tag extrato_cartoes_relatorios_path, class: 'form-group no-margin', method: :post do
          .container-fluid
            .control-group.span12#datepicker2.input-append
              = label_tag :data, 'Data', class: 'control-label'
              .controls
                = text_field_tag :data, params[:data] || l(Date.today), class: 'span11', required: true
                %span.add-on
                  %i{"data-date-icon" => "icon-calendar"}
          .form-actions
            .right  
              = submit_tag t('.confirm', :default => t("helpers.submit.confirm")),  class: 'btn btn-primary btn-small'
